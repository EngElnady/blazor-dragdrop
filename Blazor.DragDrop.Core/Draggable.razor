@inject DragDropService DragDropService
@using System.Diagnostics


@code {

    private int _id { get; set; }

    private bool _IsInTransit;

    protected override void OnInitialized()
    {
        _id = DragDropService.GetDraggableId();

        var dataItem = new DraggableItem() { Id = _id, RenderFragement = ChildContent , Foo = Foo};


        Dropzone.RegisterDraggable(dataItem);


        DragDropService.StateHasChanged += async () =>
        {
            await InvokeAsync(() => StateHasChanged());
        };

    }


    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [CascadingParameter] Dropzone Dropzone { get; set; }

    [Parameter]
    public dynamic Foo { get; set; }


}
